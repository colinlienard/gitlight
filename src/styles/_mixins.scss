@use 'sass:color';
@use './typography';
@use './variables';

@mixin shiny($color, $light-amount: 0.1, $radius: variables.$radius) {
	position: relative;
	border-radius: $radius;
	background-color: $color;
	box-shadow: variables.$shadow;
	isolation: isolate;

	&::before {
		position: absolute;
		border-radius: $radius;
		background-image: linear-gradient(rgba(white, $light-amount), transparent);
		content: '';
		inset: 0;
		opacity: 0.5;
		pointer-events: none;
	}

	&::after {
		position: absolute;
		z-index: -1;
		border: 1px solid rgba(white, calc($light-amount / 2));
		border-radius: calc($radius - 1px);
		content: '';
		inset: 0;
	}

	&:hover::before {
		background-image: linear-gradient(rgba(white, calc($light-amount / 2)), transparent);
	}
}

@mixin box($hover: false) {
	border: 1px solid variables.$bg-4;
	border-radius: variables.$radius;
	background-color: variables.$bg-2;

	@if $hover {
		&:hover {
			border-color: rgba(white, 15%);
		}
	}
}

@mixin link() {
	@include typography.bold;

	color: variables.$light-blue;

	&:hover {
		filter: brightness(130%);
	}
}

@mixin skeleton($width: 100%, $height: 100%) {
	position: relative;
	overflow: hidden;
	width: $width;
	height: $height;
	flex: 0 0 auto;
	border-radius: variables.$radius;
	background-color: variables.$bg-3;

	&::before {
		position: absolute;
		width: max(50%, 2rem);
		animation: skeleton 0.8s ease-in-out infinite;
		background-image: linear-gradient(to right, transparent, rgba(white, 0.05), transparent);
		content: '';
		inset: 0 auto;

		@keyframes skeleton {
			from {
				right: 100%;
			}

			to {
				right: min(-50%, -2rem);
			}
		}
	}
}

@mixin blurred-background() {
	position: fixed;
	z-index: 998;
	-webkit-backdrop-filter: blur(0.1rem);
	backdrop-filter: blur(0.1rem);
	background-color: rgba(black, 0.2);
	inset: 0;
}

@mixin item-list() {
	position: relative;
	display: flex;
	width: 100%;
	align-items: center;
	gap: 0.5rem;

	&:not(.active) {
		filter: saturate(0);
		opacity: 0.5;
	}

	&::before {
		position: absolute;
		z-index: -1;
		border-radius: variables.$radius;
		background-color: variables.$bg-2;
		content: '';
		inset: -0.25rem -0.5rem;
		opacity: 0;
	}

	&:hover::before {
		opacity: 1;
	}
}
